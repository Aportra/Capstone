name: Daily Scraper

on:
  schedule:
    - cron: '0 6 * * *'  # Run daily at 6 AM UTC
  workflow_dispatch:

env:
  ACTIONS_STEP_DEBUG: true

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install Google Chrome
      - name: Install Google Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip google-chrome-stable

      # Step 3: Install Chromedriver
      - name: Install Chromedriver
        run: |
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+' | head -1)
          CHROMEDRIVER_VERSION=$(wget -qO- "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")
          wget -q "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
          unzip chromedriver_linux64.zip -d /usr/local/bin/
          rm chromedriver_linux64.zip

      # Step 4: Verify Installation
      - name: Verify Chrome and Chromedriver Installation
        run: |
          google-chrome --version
          chromedriver --version

      # Step 5: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 6: Install Dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 7: Run the Scraper
      - name: Run scraper
        run: python scrape_current_nba_games.py
        env:
          SERVER_EMAIL: ${{ secrets.SERVER_EMAIL }}
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}

      # Step 8: Upload Screenshot
      - name: Upload Screenshot
        if: always()  # Always upload the artifact even if the scraper fails
        uses: actions/upload-artifact@v3
        with:
          name: screenshots
          path: screenshot.png
